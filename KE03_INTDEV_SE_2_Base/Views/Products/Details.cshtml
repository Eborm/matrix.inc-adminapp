@model DataAccessLayer.Models.Product

@{
    ViewData["Title"] = "Details";
    var now = DateTimeOffset.UtcNow.ToUnixTimeSeconds();
    var kortingActief = Model.Discount > 0 && Model.DiscountStartTime > 0 && now < (Model.DiscountStartTime + Model.DiscountDuration);
    var secondenResterend = (Model.DiscountStartTime + Model.DiscountDuration) - now;
    var dagenResterend = Math.Max(0, Math.Ceiling((double)secondenResterend / 86400));
}

<h1>Productdetails</h1>

<div class="card" style="max-width: 500px;">
    <div class="card-body">
        <h4 class="card-title">@Model.Name</h4>
        <p class="card-text">@Model.Description</p>
        <hr />
        <dl class="row">
            <dt class="col-sm-5">Originele prijs</dt>
            <dd class="col-sm-7">&euro; @Model.Price.ToString("0.00")</dd>
            <dt class="col-sm-5">Korting</dt>
            <dd class="col-sm-7">
                @(Model.Discount > 0 ? (Model.Discount * 100).ToString("0") + "%" : "Geen")
            </dd>
            <dt class="col-sm-5">Prijs na korting</dt>
            <dd class="col-sm-7">
                @if (kortingActief) {
                    <span class="badge bg-success fs-5">&euro; @((Model.Price * (1 - Model.Discount)).ToString("0.00"))</span>
                } else {
                    <span>&euro; @Model.Price.ToString("0.00")</span>
                }
            </dd>
            <dt class="col-sm-5">Korting status</dt>
            <dd class="col-sm-7">
                @if (kortingActief) {
                    <span class="badge bg-info">Nog @dagenResterend dag(en) korting!</span>
                } else if (Model.Discount > 0) {
                    <span class="badge bg-secondary">Korting verlopen</span>
                }
            </dd>
        </dl>
    </div>
</div>
<div class="mt-3">
    <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary">Edit</a>
    <a asp-action="Index" class="btn btn-secondary">Terug naar lijst</a>
</div>