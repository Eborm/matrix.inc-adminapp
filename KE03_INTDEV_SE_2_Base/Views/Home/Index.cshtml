@{
  ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html lang="nl">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Statistieken</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: sans-serif;
      margin: 0;
      padding: 0;
      background: #f5f5f5;
    }

    h1 {
      text-align: center;
      padding: 20px;
    }

    .chart-container {
      display: flex;
      justify-content: space-around;
      align-items: flex-start;
      flex-wrap: wrap;
      gap: 20px;
      padding: 20px;
    }

    .chart-box {
      flex: 1 1 400px;
      max-width: 500px;
      background: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    canvas {
      width: 100% !important;
      height: auto !important;
    }
  </style>
</head>
<body>

<h1>Matrix Inc. Dashboard</h1>

<div class="chart-container">
  <div class="chart-box">
    <h2>Orders per Maand</h2>
    <canvas id="ordersChart"></canvas>
  </div>
  <div class="chart-box">
    <h2>Actieve Klanten</h2>
    <canvas id="activeUsersChart"></canvas>
  </div>
  <div class="chart-box">
    <h2>Actieve Korting</h2>
    <canvas id="activeDiscountChart"></canvas>
  </div>
</div>

<script>
  async function LoadOrdersPerMonth() {
    const response = await fetch("/api/stats/orders-per-month");
    const data = await response.json();

    const labels = data.map(item => {
      const date = new Date(item.year, item.month - 1);
      return date.toLocaleString("nl-NL", { month: "long", year: "numeric" });
    });

    const counts = data.map(item => item.count);

    new Chart(document.getElementById("ordersChart"), {
      type: "line",
      data: {
        labels: labels,
        datasets: [{
          label: "Aantal orders",
          data: counts,
          fill: false,
          borderColor: "blue",
          tension: 0.3
        }]
      }
    });
  }

  async function LoadActiveUsersChart() {
    const response = await fetch('/api/stats/active-users');
    const data = await response.json();

    const count = data.length;

    const ctx = document.getElementById('activeUsersChart').getContext('2d');
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: ['Actieve klanten'],
        datasets: [{
          label: 'Aantal',
          data: [count],
          backgroundColor: 'rgba(255, 99, 132, 0.5)',
          borderColor: 'rgba(255, 99, 132, 1)',
          borderWidth: 1,
          barPercentage: 0.3,
          categoryPercentage: 0.3
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true,
            precision: 0
          }
        }
      }
    });
  }

  async function LoadActiveDiscount() {
    const response = await fetch('/api/stats/check-discount');
    const data = await response.json();

    const discounted = data.products.filter(p => p.hasDiscount === true);
    const count = discounted.length;

    const ctx = document.getElementById('activeDiscountChart').getContext('2d');
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: ['Actieve kortingen'],
        datasets: [{
          label: 'Aantal',
          data: [count],
          backgroundColor: 'rgba(255, 99, 132, 0.5)',
          borderColor: 'rgba(255, 99, 132, 1)',
          borderWidth: 1,
          barPercentage: 0.3,
          categoryPercentage: 0.3
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true,
            precision: 0
          }
        }
      }
    });
  }

  LoadOrdersPerMonth();
  LoadActiveUsersChart();
  LoadActiveDiscount();
</script>

</body>
</html>